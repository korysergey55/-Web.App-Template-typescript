{"version":3,"sources":["containers/Modal/styles.module.scss","components/AppLoading/styles.module.scss","containers/WeatherList/styles.module.scss","config.ts","stores/User.ts","stores/Users.ts","utils/api.ts","stores/Weather.ts","stores/Modal.ts","stores/index.ts","components/PrivateRoute/index.tsx","utils/history.ts","components/AppLoading/index.tsx","containers/Admin/index.tsx","actions/users.ts","containers/Chart/index.tsx","containers/WeatherList/index.tsx","containers/Modal/index.tsx","containers/SearchForm/index.tsx","containers/App/index.tsx","serviceWorker.ts","index.tsx","containers/SearchForm/styles.module.scss"],"names":["module","exports","api","axios","create","baseURL","process","REACT_APP_HOST","interceptors","response","use","error","Promise","reject","makeAutoObservable","this","name","user","observable","id","company","action","userInfo","computed","reaction","users","_","console","log","toJS","length","a","bound","forecast","lenguage","randonTemp","time","timeChart","sity","get","params","q","units","appid","lang","setForecast","data","newForecastApi","then","newForecastByTimeApi","setForecastByTime","forecastByTime","modal","configure","enforceActions","RootStore","usersStore","userStore","wheatherStore","modalStore","rootStore","StoreContext","createContext","useStore","store","useContext","Error","observer","props","allow","message","warning","to","redirectTo","createBrowserHistory","AppLoading","className","styles","loading","Admin","React","Component","setUser","setInfo","localStorage","setItem","JSON","stringify","authUser","userStr","getItem","parse","Chart","register","ChartDataLabels","LineChart","useState","datas","setDatas","useEffect","gradient","document","getElementById","getContext","createLinearGradient","addColorStop","newData","labels","datasets","fill","backgroundColor","pointStyle","borderRadius","datalabels","color","anchor","align","offset","font","size","lineHeight","options","maintainAspectRatio","bezierCurve","plugins","legend","display","elements","line","tension","borderWidth","scales","yAxes","position","title","ticks","beginAtZero","grid","xAxes","width","height","WeatherList","setInitialTemp","temp","setTemp","activClass","setActivClass","main","res","parseFloat","toFixed","map","item","index","weatherMainContainer","key","weatherListContainer","close","location","sys","country","hederWeatherContainer","iconWheather","src","weather","icon","weatherDiscription","description","date","dayjs","unix","dt","format","grafic","buttonsContainer","onClick","prev","changeTemperageCelciy","buttonCelciy","activCelciy","activ","buttonFaringeit","changeTemperageFaringate","temperature","temperatureFellsLike","feels_like","rightSideContainer","rightSide","rightSidespan","wind","speed","humidity","pressure","Modal","children","window","addEventListener","handleEsc","querySelector","style","overflow","removeEventListener","evt","code","setModal","modalRoot","createPortal","Overlay","target","currentTarget","type","closeModal","Option","Select","initialState","SearchForm","state","setState","recetForm","getRandomTemperature","min","max","Math","floor","random","ceil","arrayRandomTemperature","i","push","getTimeForChart","tempForChart","correntTime","formatedTime","newTime","Number","reverse","formContainer","input","value","onChange","placeholder","preventDefault","fetchForecast","setRandonTemp","setTimeChart","buttonSubmit","showSearch","optionFilterProp","defaultValue","dropdownClassName","inputSelect","setLenguage","App","initialized","componentDidMount","loadUser","userActions","render","history","roles","path","component","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fcc53d3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"styles_Overlay__HyEgy\",\"Modal\":\"styles_Modal__2l_wG\",\"closeModal\":\"styles_closeModal__3Y1HR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"styles_loading__99RaB\",\"Gradient\":\"styles_Gradient__3inIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherMainContainer\":\"styles_weatherMainContainer__28d6K\",\"weatherListContainer\":\"styles_weatherListContainer__18rLT\",\"close\":\"styles_close__12b7F\",\"location\":\"styles_location__TZoPb\",\"weatherDiscription\":\"styles_weatherDiscription__2S_gF\",\"date\":\"styles_date__GFaxz\",\"grafic\":\"styles_grafic__2C7HE\",\"temperature\":\"styles_temperature__3UW1K\",\"buttonsContainer\":\"styles_buttonsContainer__3t1CJ\",\"buttonCelciy\":\"styles_buttonCelciy__23EQ5\",\"buttonFaringeit\":\"styles_buttonFaringeit__2L4M8\",\"temperatureFellsLike\":\"styles_temperatureFellsLike__sy96n\",\"rightSideContainer\":\"styles_rightSideContainer__2TWl1\",\"rightSide\":\"styles_rightSide__2l4qp\",\"rightSidespan\":\"styles_rightSidespan__2elGz\",\"activ\":\"styles_activ__1YLHs\",\"activCelciy\":\"styles_activCelciy__19gf5\"};","import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n  baseURL: process.env.REACT_APP_HOST,\r\n})\r\n\r\n// here you can define constant's for project or inintial configuration for packages\r\n\r\n// response middleware\r\napi.interceptors.response.use(\r\n  response => {\r\n    // here you can check authorized user or not (401) or something global response functions\r\n    return response\r\n  },\r\n  error => {\r\n    // api error handler\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n","import {\r\n  observable,\r\n  action,\r\n  computed,\r\n  reaction,\r\n  makeAutoObservable,\r\n} from 'mobx'\r\nimport { IUser } from '../models'\r\n\r\nclass UserStore {\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    // reaction(\r\n    //   () => this.user,\r\n    //   _ => console.log(this.user)\r\n    // )\r\n  }\r\n\r\n  @observable user: IUser = { id: 0, name: '', company: { name: '' } }\r\n\r\n  @action setInfo = (userInfo: IUser): void => {\r\n    this.user = userInfo\r\n  }\r\n\r\n  @action unSetInfo = (): void => {\r\n    this.user = { id: 0, name: '', company: { name: '' } }\r\n  }\r\n\r\n  @computed get info(): any {\r\n    return {\r\n      name: this.user.name,\r\n    }\r\n  }\r\n}\r\n\r\nexport default new UserStore()\r\n","import {\r\n  observable,\r\n  action,\r\n  computed,\r\n  reaction,\r\n  makeAutoObservable,\r\n  toJS,\r\n} from 'mobx'\r\nimport { IUser } from '../models'\r\n\r\nclass UsersStore {\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    reaction(\r\n      () => this.users,\r\n      _ => console.log(toJS(this.users))\r\n    )\r\n  }\r\n\r\n  @observable users: IUser[] = []\r\n\r\n  @action setInfo = async (userInfo: IUser[]): Promise<void> => {\r\n    this.users = userInfo\r\n  }\r\n\r\n  @action unSetInfo = (): void => {\r\n    this.users = []\r\n  }\r\n\r\n  @computed get info(): any {\r\n    return {\r\n      length: this.users.length,\r\n    }\r\n  }\r\n}\r\n\r\nexport default new UsersStore()\r\n","import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5/',\r\n  \r\n})","import { api } from './../utils/api'\r\nimport { IWeather } from './../models/weathet'\r\nimport {\r\n  makeAutoObservable,\r\n  configure,\r\n  computed,\r\n  observable,\r\n  action,\r\n  reaction,\r\n  runInAction,\r\n  toJS,\r\n} from 'mobx'\r\nimport axios from 'axios'\r\n\r\nclass Weather {\r\n  @observable lenguage = ''\r\n  @observable forecast: Array<IWeather> = []\r\n  @observable forecastByTime = [{}]\r\n  @observable randonTemp = []\r\n  @observable timeChart = []\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    reaction(\r\n      () => this.forecast,\r\n      _ => console.log(toJS(this.forecast))\r\n    )\r\n  }\r\n\r\n  @action setLenguage(lenguage: string) {\r\n    this.lenguage = lenguage\r\n  }\r\n\r\n  @action setRandonTemp(randonTemp: any) {\r\n    this.randonTemp = randonTemp\r\n  }\r\n  @action setTimeChart(time: any) {\r\n    this.timeChart = time\r\n  }\r\n\r\n  @action async fetchForecast(sity: string) {\r\n    const response = await api.get(`/weather`, {\r\n      params: {\r\n        q: sity,\r\n        units: 'metric',\r\n        appid: process.env.REACT_APP_API_KEY,\r\n        lang: this.lenguage,\r\n      },\r\n    })\r\n    this.setForecast(response.data)\r\n  }\r\n\r\n  @action.bound setForecast(newForecastApi: IWeather) {\r\n    this.forecast = [newForecastApi]\r\n  }\r\n\r\n  @action fetchForecastByTime(sity: string) {\r\n    const REACT_API_KEY = 'b32058f10fd03c991cd00d5d3d9b95f9'\r\n    const BASE_URL_WEATHER_BY_TIME = 'https://pro.openweathermap.org/data/2.5/'\r\n    axios\r\n      .get(\r\n        `${BASE_URL_WEATHER_BY_TIME}forecast/hourly?q=${sity}&appid=${REACT_API_KEY}`\r\n      )\r\n      .then(response => response.data)\r\n      .then(newForecastByTimeApi => {\r\n        this.setForecastByTime(newForecastByTimeApi)\r\n      })\r\n  }\r\n  @action.bound setForecastByTime(newForecastByTimeApi: {}) {\r\n    this.forecastByTime = [newForecastByTimeApi]\r\n  }\r\n}\r\nexport default new Weather()\r\n\r\n// {\r\n//   sity:observable,\r\n//   lenguage:observable,\r\n//   forecast: observable,\r\n//   setSity:action,\r\n//   setForecast: action,\r\n//   fetchForecast: action.bound,\r\n// }\r\n","import {\r\n  makeAutoObservable,\r\n  configure,\r\n  computed,\r\n  observable,\r\n  action,\r\n  reaction,\r\n  runInAction,\r\n  toJS,\r\n} from 'mobx'\r\n\r\nclass Modal {\r\n  @observable modal = false\r\n \r\n  constructor() {\r\n    makeAutoObservable(this)\r\n    reaction(\r\n      () => this.modal,\r\n      _ => console.log(toJS(this.modal))\r\n    )\r\n  }\r\n\r\n  @action setModal() {\r\n    this.modal = !this.modal\r\n  }\r\n\r\n}\r\nexport default new Modal()\r\n","import { createContext, useContext } from 'react'\r\nimport { configure, observable } from 'mobx'\r\n\r\nimport userStore from './User'\r\nimport usersStore from './Users'\r\nimport wheatherStore from './Weather'\r\nimport modalStore from './Modal'\r\n\r\nconfigure({ enforceActions: 'observed' })\r\n\r\nclass RootStore {\r\n  @observable usersStore = usersStore\r\n  @observable userStore = userStore\r\n  @observable wheatherStore = wheatherStore\r\n  @observable modalStore = modalStore\r\n\r\n}\r\n\r\nconst rootStore = new RootStore()\r\n\r\nexport const StoreContext = createContext<RootStore>(rootStore)\r\n\r\nexport const useStore = (): RootStore => {\r\n  const store = useContext(StoreContext)\r\n  if (!store) {\r\n    throw new Error('You have forgot to use StoreProvider, shame on you.')\r\n  }\r\n  return store\r\n}\r\n\r\nexport default new RootStore()\r\n","import * as React from 'react'\r\nimport { Route, Redirect, RouteProps } from 'react-router'\r\nimport { message } from 'antd'\r\nimport { observer } from 'mobx-react'\r\n\r\nimport { useStore } from 'stores'\r\ninterface IProps {\r\n  roles: string[]\r\n  message?: string\r\n  redirectTo?: string | object\r\n}\r\n\r\nexport const PrivateRoute = (props: RouteProps & IProps): React.ReactElement => {\r\n  const { userStore } = useStore()\r\n  const { user } = userStore\r\n\r\n  let allow = false\r\n\r\n  allow = !!(user.id && user.id === 1)\r\n\r\n  if (!allow)\r\n    message.warning(message ? message : `You have not access to this page`)\r\n\r\n  return allow ? (\r\n    <Route {...props} />\r\n  ) : (\r\n    <Redirect to={props.redirectTo ? props.redirectTo : '/'} />\r\n  )\r\n}\r\n\r\nexport default observer(PrivateRoute)\r\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()\r\n\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nconst AppLoading: React.FC = () => (\r\n  <div className={styles.loading}>\r\n    <span>Application is loading, please wait...</span>\r\n  </div>\r\n)\r\n\r\nexport default AppLoading\r\n","import React from 'react'\r\n\r\nclass Admin extends React.Component {\r\n  render(): React.ReactElement {\r\n    return <p>Admin</p>\r\n  }\r\n}\r\n\r\nexport default Admin\r\n","import { api } from '../config'\r\nimport { IUser } from 'models/user'\r\n\r\nimport history from 'utils/history'\r\n\r\nimport store from '../stores'\r\n\r\nconst { userStore, usersStore } = store\r\n\r\n// common http request\r\nexport async function getUser(id: number): Promise<IUser> {\r\n  const res = await api.get(`/users/${id}`)\r\n  if (res.status !== 200) throw new Error(`Can't fetch user by id ${id}`)\r\n\r\n  return res.data\r\n}\r\n\r\n// http request + mobx store\r\nexport async function getUsers(): Promise<void> {\r\n  const res = await api.get('/users')\r\n  if (res.status !== 200) throw new Error(`Can't fetch user list`)\r\n  usersStore.setInfo(res.data)\r\n}\r\n\r\n// common mobx action\r\nexport function setUser(user: IUser): void {\r\n  userStore.setInfo(user)\r\n  localStorage.setItem('user', JSON.stringify(user))\r\n}\r\n\r\nexport function unsetUser(): void {\r\n  userStore.unSetInfo()\r\n  localStorage.removeItem('user')\r\n  history.replace('/login')\r\n}\r\n\r\nexport async function authUser(): Promise<IUser | null> {\r\n  try {\r\n    const userStr: string | null = localStorage.getItem('user')\r\n    if (!userStr) return null\r\n\r\n    const user = JSON.parse(userStr)\r\n    setUser(user)\r\n\r\n    return user\r\n  } catch (e) {\r\n    return null\r\n  }\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { observer } from 'mobx-react'\r\nimport { useStore } from 'stores'\r\nimport { Chart } from 'chart.js'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'\r\nChart.register(ChartDataLabels)\r\n\r\nconst LineChart = observer(() => {\r\n  const { wheatherStore } = useStore()\r\n  const { randonTemp } = wheatherStore\r\n  const { timeChart } = wheatherStore\r\n  const [datas, setDatas] = useState<any>({})\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    let ctx = document.getElementById('canvas').getContext('2d')\r\n    let gradient = ctx.createLinearGradient(0, 0, 0, 80)\r\n    gradient.addColorStop(0, '#5B8CFF')\r\n    gradient.addColorStop(1, '#FFF4F4')\r\n\r\n    const newData = {\r\n      labels: [...timeChart],\r\n      datasets: [\r\n        {\r\n          fill: true,\r\n          data: [...randonTemp],\r\n          backgroundColor: gradient,\r\n          pointStyle: 'line',\r\n          borderRadius: 7,\r\n\r\n          datalabels: {\r\n            color: '#918f8f',\r\n            anchor: 'start',\r\n            align: 'top',\r\n            offset: 0,\r\n            font: {\r\n              size: 8,\r\n              lineHeight: 1.2,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    }\r\n    setDatas(newData)\r\n  }, [])\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    bezierCurve: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    elements: {\r\n      line: {\r\n        tension: 0.5,\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n    scales: {\r\n      yAxes: {\r\n        display: false,\r\n        position: 'right',\r\n        color: '#5B8CFF',\r\n        title: {\r\n          align: 'top',\r\n          color: '#C5C5C5',\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          color: '#C5C5C5',\r\n          font: {\r\n            size: 12,\r\n            lineHeight: 1.2,\r\n          },\r\n        },\r\n        grid: {\r\n          color: 'transparent',\r\n          borderWidth: 'transparent',\r\n        },\r\n      },\r\n      xAxes: {\r\n        display: true,\r\n        ticks: {\r\n          beginAtZero: true,\r\n          color: '#C5C5C5',\r\n          font: {\r\n            size: 10,\r\n            lineHeight: 1.2,\r\n          },\r\n        },\r\n        grid: {\r\n          color: 'transparent',\r\n          borderWidth: 'transparent',\r\n        },\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Line\r\n        id={'canvas'}\r\n        data={datas}\r\n        options={options}\r\n        width={150}\r\n        height={80}\r\n      />\r\n    </>\r\n  )\r\n})\r\n\r\nexport default LineChart\r\n","import React, { Component, useEffect, useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport LineChart from '../Chart/index'\r\nimport { observer } from 'mobx-react'\r\nimport { toJS } from 'mobx'\r\nimport { useStore } from 'stores'\r\nimport dayjs from 'dayjs'\r\nconst iconURL = 'http://openweathermap.org/img/wn/'\r\n\r\nconst WeatherList = observer(() => {\r\n  const { wheatherStore } = useStore()\r\n  const { forecast } = wheatherStore\r\n\r\n  useEffect(() => {\r\n    setInitialTemp(forecast)\r\n  }, [forecast])\r\n\r\n  const [temp, setTemp] = useState<number | string>(0)\r\n  const [activClass, setActivClass] = useState(false)\r\n\r\n  const setInitialTemp = (forecast: any) => {\r\n    if (forecast[0] && forecast[0].main) {\r\n      const res: number = parseFloat(forecast[0].main?.temp)\r\n      setTemp(res.toFixed(0))\r\n    }\r\n  }\r\n  const changeTemperageFaringate = (item: any) => {\r\n    const res: number = parseFloat(item.main.temp) * (9 / 5) + 32\r\n    setTemp(res.toFixed(0))\r\n    setActivClass(prev => !prev)\r\n  }\r\n  const changeTemperageCelciy = (item: any) => {\r\n    const res: number = parseFloat(item.main.temp)\r\n    setTemp(res.toFixed(0))\r\n    setActivClass(prev => !prev)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {forecast.length\r\n        ? forecast?.map((item: any, index: number) => {\r\n            return (\r\n              <div className={styles.weatherMainContainer} key={item.id}>\r\n                <div className={styles.weatherListContainer}>\r\n                  <a className={styles.close}>x</a>\r\n                  <h2 className={styles.location}>\r\n                    {item.name},{item.sys?.country}\r\n                  </h2>\r\n                  <div className={styles.hederWeatherContainer}>\r\n                    <img\r\n                      className={styles.iconWheather}\r\n                      src={`${iconURL}${item.weather[0].icon}.png`}\r\n                      width=\"35\"\r\n                      height=\"35\"\r\n                    />\r\n                    <p className={styles.weatherDiscription}>\r\n                      {item.weather[0].description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <h2 className={styles.date}>\r\n                  {' '}\r\n                  {dayjs.unix(item.dt).format('dd, D MMMM, HH:mm')}\r\n                </h2>\r\n                <div className={styles.grafic}>\r\n                  <LineChart />\r\n                </div>\r\n                <div className={styles.buttonsContainer}>\r\n                  <button\r\n                    onClick={() => changeTemperageCelciy(item)}\r\n                    className={ activClass ? styles.buttonCelciy : styles.activCelciy}\r\n                  > &deg;C\r\n                  </button>\r\n                  <button\r\n                    className={activClass ? styles.activ : styles.buttonFaringeit }\r\n                    onClick={() => changeTemperageFaringate(item)}\r\n                  >\r\n                    &deg;F\r\n                  </button>\r\n                </div>\r\n                <p className={styles.temperature}>+{temp}</p>\r\n                <p className={styles.temperatureFellsLike}>\r\n                  Feels like: {item.main.feels_like.toFixed(0)} &deg;C\r\n                </p>\r\n                <div className={styles.rightSideContainer}>\r\n                  <p className={styles.rightSide}>\r\n                    Wind:{' '}\r\n                    <span className={styles.rightSidespan}>\r\n                      {item.wind.speed}m/s\r\n                    </span>\r\n                  </p>\r\n                  <p className={styles.rightSide}>\r\n                    Humidity:{' '}\r\n                    <span className={styles.rightSidespan}>\r\n                      {item.main.humidity}%\r\n                    </span>\r\n                  </p>\r\n                  <p className={styles.rightSide}>\r\n                    Pressure:{' '}\r\n                    <span className={styles.rightSidespan}>\r\n                      {item.main.pressure}Pa\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        : null}\r\n    </>\r\n  )\r\n})\r\n\r\nexport default WeatherList\r\n","import React, { useEffect, useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { createPortal } from 'react-dom'\r\nimport { useStore } from 'stores'\r\n\r\nconst Modal: React.FC= ({children}) => {\r\nconst {modalStore} = useStore()\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleEsc);\r\n    const body: any = document.querySelector(\"body\");\r\n    body.style.overflow = \"hidden\";\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleEsc);\r\n      const body: any = document.querySelector(\"body\");\r\n      body.style.overflow = \"auto\";\r\n    };\r\n  });\r\n\r\n  const handleEsc = (evt: any) => {\r\n    if (evt.code === \"Escape\") {\r\n      modalStore.setModal()\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (evt: any) => {\r\n    if (evt.target !== evt.currentTarget) return;\r\n    modalStore.setModal()\r\n  };\r\n\r\n  const taggleModal=()=>{\r\n    modalStore.setModal()\r\n  }\r\n\r\n  const modalRoot: any = document.getElementById(\"modal-root\");\r\n \r\n  return createPortal(\r\n    <>\r\n    <div className={styles.Overlay}  onClick={handleBackdropClick}>\r\n       <div className={styles.Modal}>\r\n        <button\r\n          type=\"button\"\r\n          className={styles.closeModal}\r\n          onClick={taggleModal}\r\n        > X\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </div>\r\n    </>, modalRoot\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useEffect, useState } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport WeatherList from 'containers/WeatherList'\r\nimport { observer } from 'mobx-react'\r\nimport { Select } from 'antd'\r\nimport { useStore } from 'stores'\r\nimport { toJS } from 'mobx'\r\nimport dayjs from 'dayjs'\r\nimport Modal from 'containers/Modal'\r\n\r\nconst { Option } = Select\r\nconst initialState = { sity: 'cherkasy' }\r\n\r\ninterface IProps {\r\n  name?: string\r\n  chairsCount: number\r\n  handleChange?: () => void\r\n}\r\n\r\nconst SearchForm: React.FC<IProps> = observer(props => {\r\n  const { wheatherStore } = useStore()\r\n  const [state, setState] = useState(initialState)\r\n  const { modalStore } = useStore()\r\n\r\n  const onHandleChange = (evt: any) => {\r\n    const { name, value } = evt.target\r\n    setState(prev => ({ ...prev, [name]: value }))\r\n  }\r\n\r\n  const onHandleSelectChange = (evt: any) => {\r\n    wheatherStore.setLenguage(evt)\r\n    wheatherStore.fetchForecast(state.sity)\r\n  }\r\n\r\n  const handleSubmitForm = (evt: { preventDefault: () => void }) => {\r\n    evt.preventDefault()\r\n    wheatherStore.fetchForecast(state.sity)\r\n    wheatherStore.setRandonTemp(arrayRandomTemperature())\r\n    wheatherStore.setTimeChart(getTimeForChart())\r\n    modalStore.setModal()\r\n    recetForm()\r\n  }\r\n\r\n  const recetForm: any = () => {\r\n    setState({ sity: '' })\r\n  }\r\n\r\n  const getRandomTemperature = (min = 0, max = 37) => {\r\n    return (\r\n      Math.floor(Math.random() * (Math.floor(max) - Math.ceil(min))) +\r\n      Math.ceil(min)\r\n    )\r\n  }\r\n  const arrayRandomTemperature = () => {\r\n    let temp = []\r\n    for (let i = 0; i <= 7; i += 1) {\r\n      temp.push(getRandomTemperature())\r\n    }\r\n    return temp\r\n  }\r\n\r\n  const getTimeForChart = () => {\r\n    let tempForChart = []\r\n    let correntTime = wheatherStore.forecast[0]?.dt\r\n    if (wheatherStore.forecast[0]?.dt) {\r\n      for (let i = 0; i <= 7; i += 1) {\r\n        const formatedTime = dayjs.unix(correntTime).format('HH')\r\n        let newTime = Number(formatedTime) - i + ':00'\r\n        tempForChart.push(newTime)\r\n      }\r\n    } else {\r\n      tempForChart = ['16:00', '17:00', '18:00', '19:00', '20:00', '21:00']\r\n      return tempForChart\r\n    }\r\n\r\n    return tempForChart.reverse()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.formContainer}>\r\n        <form>\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"sity\"\r\n            value={state.sity}\r\n            onChange={onHandleChange}\r\n            placeholder=\"Enter city name\"\r\n          />\r\n          <button onClick={handleSubmitForm} className={styles.buttonSubmit}>\r\n            Add\r\n          </button>\r\n        </form>\r\n        <div className=\"selectContainer\">\r\n          <Select\r\n            showSearch\r\n            style={{ width: 72 }}\r\n            placeholder=\"Search to Select\"\r\n            optionFilterProp=\"children\"\r\n            defaultValue=\"en\"\r\n            dropdownClassName={styles.inputSelect}\r\n            onChange={onHandleSelectChange}\r\n          >\r\n            <Option value=\"en\">EN</Option>\r\n            <Option value=\"ua\">UA</Option>\r\n            <Option value=\"ru\">RU</Option>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n      <WeatherList />\r\n      {modalStore.modal ? (\r\n        <Modal>\r\n          <WeatherList />\r\n        </Modal>\r\n      ) : null}\r\n    </>\r\n  )\r\n})\r\n\r\nexport default SearchForm\r\n","import React, { Component } from 'react'\r\nimport { Router, Switch, Route } from 'react-router'\r\nimport PrivateRoute from 'components/PrivateRoute'\r\nimport { Provider } from 'mobx-react'\r\nimport history from 'utils/history'\r\nimport AppLoading from 'components/AppLoading'\r\nimport Public from '../Public'\r\nimport Admin from '../Admin'\r\nimport store from 'stores'\r\nimport * as userActions from 'actions/users'\r\nimport SearchForm from '../../containers/SearchForm/index'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    initialized: false,\r\n  }\r\n\r\n  componentDidMount = (): void => {\r\n    this.loadUser()\r\n  }\r\n\r\n  loadUser = async (): Promise<void> => {\r\n    try {\r\n      await userActions.authUser()\r\n    } catch (e) {\r\n      console.log(e)\r\n    } finally {\r\n      this.setState({ initialized: true })\r\n    }\r\n  }\r\n\r\n  render = (): JSX.Element => {\r\n    return (\r\n      <Provider {...store}>\r\n        {this.state.initialized ? (\r\n          <Router history={history}>\r\n            <Switch>\r\n              <PrivateRoute roles={['admin']} path=\"/admin\" component={Admin} />\r\n              {/* <Route path=\"/\" component={Public} /> */}\r\n              <Route path=\"/\" component={SearchForm} />\r\n            </Switch>\r\n          </Router>\r\n        ) : (\r\n          <AppLoading />\r\n        )}\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    )\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import './config'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './containers/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// normalize and basic styles for application\r\nimport 'normalize.css'\r\nimport 'antd/dist/antd.css'\r\nimport 'sources/styles/styles.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"styles_formContainer__35ADt\",\"input\":\"styles_input__1-6Lu\",\"buttonSubmit\":\"styles_buttonSubmit__2bMs-\",\"inputSelect\":\"styles_inputSelect__1cgcn\"};"],"sourceRoot":""}